name: python_lib
description: Installs the given GardenLinux Python library

inputs:
  version:
    description: GardenLinux Python library version
    default: "0.8.9"

outputs:
  version:
    description: "Detected Python cache strategy."
    value: ${{ steps.env-check.outputs.cache_type }}

runs:
  using: composite
  steps:
    - name: Verify requirements.txt for "actions/setup-python" with enabled "pip" cache
      shell: bash
      run: |
        if [ ! -f "requirements.txt" ]; then
            echo "gardenlinux @ git+https://github.com/gardenlinux/python-gardenlinux-lib.git@${{ inputs.version }}" | tee -a requirements.txt
        fi

    - name: Evaluate Python Environment
      id: env-check
      shell: bash
      run: |
        # Check if python is installed
        if command -v python &> /dev/null; then
          echo "python_installed=true" >> $GITHUB_OUTPUT
        else
          echo "python_installed=false" >> $GITHUB_OUTPUT
        fi

        # Determine cache type based on available lockfile
        if [ -f poetry.lock ]; then
          echo "cache_type=poetry" >> $GITHUB_OUTPUT
        elif [ -f requirements.txt ]; then
          echo "cache_type=pip" >> $GITHUB_OUTPUT
        else
          # no lockfile present: create empty requirements.txt and use pip caching
          touch requirements.txt
          echo "cache_type=pip" >> $GITHUB_OUTPUT
        fi

    - name: Set up Python 3.13
      if: steps.env-check.outputs.python_installed == 'false'
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        cache: ${{ steps.env-check.outputs.cache_type }}

    - name: Install GardenLinux Python library
      shell: bash
      run: |
        pip install git+https://github.com/gardenlinux/python-gardenlinux-lib.git@${{ inputs.version }}
